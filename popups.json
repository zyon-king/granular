{
  "script": "function showCustomPopup(type, icon, title, message, buttons) {\n  const popup = document.createElement(\'div\');\n  popup.classList.add(\'popup\');\n\n  const content = document.createElement(\'div\');\n  if (type === \'error\') {\n    content.classList.add(\'popup-content\', \'error\');\n  } else if (type === \'confirmation\') {\n    content.classList.add(\'popup-content\', \'confirm\');\n  } else { \n    content.classList.add(\'popup-content\', \'success\');\n  }\n\n  popup.appendChild(content);\n\n  if (icon) {\n    const iconEl = document.createElement(\'span\');\n    iconEl.classList.add(\'popup-icon\');\n    iconEl.innerHTML = icon;\n    content.appendChild(iconEl);\n  }\n\n  const titleEl = document.createElement(\'h2\');\n  titleEl.textContent = title;\n  content.appendChild(titleEl);\n\n  const messageEl = document.createElement(\'p\');\n  messageEl.textContent = message;\n  content.appendChild(messageEl);\n\n  const buttonsEl = document.createElement(\'div\');\n  buttonsEl.classList.add(\'popup-buttons\');\n  content.appendChild(buttonsEl);\n\n  buttons.forEach(button => {\n    const buttonEl = document.createElement(\'button\');\n    buttonEl.textContent = button.text;\n    buttonEl.classList.add(\'popup-btn\', \'popup-btn-primary\');\n    buttonEl.addEventListener(\'click\', () => {\n      if (button.callback) {\n        button.callback();\n      }\n      popup.classList.add(\'fade-out\');\n      setTimeout(() => {\n        popup.remove();\n      }, 500);\n    });\n    buttonsEl.appendChild(buttonEl);\n  });\n\n  popup.addEventListener(\'click\', (e) => {\n    if (e.target === popup) {\n      popup.classList.add(\'fade-out\');\n      setTimeout(() => {\n        popup.remove();\n      }, 500);\n    }\n  });\n\n  document.body.appendChild(popup);\n}\n\nfunction showConfirm(message) {\n  return new Promise((resolve) => {\n    showCustomPopup(\'confirmation\', \'❓\', \'Confirmação\', message, [\n      { text: \'Sim\', callback: () => resolve(true) },\n      { text: \'Não\', callback: () => resolve(false) }\n    ]);\n  });\n}\n\nfunction showSuccess(message) {\n  showCustomPopup(\'success\', \'✅\', \'Sucesso\', message, [\n    { text: \'OK\', callback: null } \n  ]);\n}\n\nfunction showError(message) {\n  showCustomPopup(\'error\', \'⚠️\', \'Alerta\', message, [\n    { text: \'OK\', callback: null } \n  ]);\n}\n\nconst mensagemElement = document.getElementById(\'mensagem\');\n\nfunction showMessage(text, className = \'\') {\n  mensagemElement.innerHTML = text;\n  mensagemElement.className = className;\n}\n\nfunction showInitialMessage() {\n  showError(\"Por favor, sempre permita as notificações para não perder alertas importantes!\");\n}\n\nfunction isNotificationSupported() {\n  return \"Notification\" in window;\n}\n\nfunction isPermissionGranted() {\n  return Notification.permission === \"granted\";\n}\n\nfunction isPermissionDenied() {\n  return Notification.permission === \"denied\";\n}\n\nfunction isIncognitoMode() {\n  try {\n    window.localStorage.setItem(\'test\', \'test\');\n    window.localStorage.removeItem(\'test\');\n    return false;\n  } catch (e) {\n    return true;\n  }\n}\n\nfunction askForNotificationPermission() {\n  if (!isNotificationSupported()) {\n    showError(\"Seu navegador não suporta notificações.\");\n    return;\n  }\n\n  if (isIncognitoMode()) {\n    showError(\"Notificações não funcionam na aba anônima.\");\n    return;\n  }\n\n  if (isPermissionGranted()) {\n    showSuccess(\"Notificações foram permitidas!\");\n    return;\n  }\n\n  if (isPermissionDenied()) {\n    showError(\"Permissão já foi negada anteriormente. Você não receberá notificações. Dica: notificações não são permitidas no modo de navegação anônima.\");\n    return;\n  }\n\n  try {\n    Notification.requestPermission().then(permission => {\n      if (permission === \"granted\") {\n        showSuccess(\"Notificações ativadas com sucesso! Você receberá atualizações importantes.\");\n      } else {\n        showError(\"Permissão negada. Você não receberá notificações. Por favor, verifique as configurações do seu navegador.\");\n      }
    });\n  } catch (error) {\n    showError(\"Erro ao solicitar permissão: \" + error.message);\n  }\n}\n\nfunction runTests() {\n  console.log(\"Testes unitários:\");\n  console.log(\"isNotificationSupported():\", isNotificationSupported());\n  console.log(\"isPermissionGranted():\", isPermissionGranted());\n  console.log(\"isPermissionDenied():\", isPermissionDenied());\n  console.log(\"isIncognitoMode():\", isIncognitoMode());\n}"}

